"use strict";(self.webpackChunkserenity_users_guide=self.webpackChunkserenity_users_guide||[]).push([[368],{7305:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return p},default:function(){return l}});var i=t(7462),r=t(3366),d=(t(7294),t(3905)),o=["components"],s={id:"maven",title:"Using Maven with Serenity",sidebar_position:3},u="Integrating Serenity BDD into a Maven project",c={unversionedId:"guide/maven",id:"guide/maven",isDocsHomePage:!1,title:"Using Maven with Serenity",description:"Maven is the recommended build tool for Serenity BDD.",source:"@site/docs/guide/maven.md",sourceDirName:"guide",slug:"/guide/maven",permalink:"/documentation/docs/guide/maven",editUrl:"https://github.com/serenity-bdd/documentation/docs/guide/maven.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"maven",title:"Using Maven with Serenity",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Creating A New Project",permalink:"/documentation/docs/guide/getting_started"},next:{title:"Step Libraries",permalink:"/documentation/docs/guide/step_libraries"}},p=[{value:"Serenity JUnit 4 Dependencies",id:"serenity-junit-4-dependencies",children:[]},{value:"Serenity JUnit 5 Dependencies",id:"serenity-junit-5-dependencies",children:[]},{value:"Serenity Cucumber Dependencies",id:"serenity-cucumber-dependencies",children:[]},{value:"Cucumber with JUnit 4 Dependencies",id:"cucumber-with-junit-4-dependencies",children:[]},{value:"Cucumber with JUnit 5 Dependencies",id:"cucumber-with-junit-5-dependencies",children:[]},{value:"Screenplay",id:"screenplay",children:[]},{value:"The Serenity Maven Plugin",id:"the-serenity-maven-plugin",children:[]}],a={toc:p};function l(e){var n=e.components,t=(0,r.Z)(e,o);return(0,d.kt)("wrapper",(0,i.Z)({},a,t,{components:n,mdxType:"MDXLayout"}),(0,d.kt)("h1",{id:"integrating-serenity-bdd-into-a-maven-project"},"Integrating Serenity BDD into a Maven project"),(0,d.kt)("p",null,"Maven is the recommended build tool for Serenity BDD."),(0,d.kt)("p",null,"You can add Serenity BDD to an existing Maven project by adding the corresponding dependencies to your ",(0,d.kt)("inlineCode",{parentName:"p"},"pom.xml")," file. All Serenity BDD projects need the following core dependency:"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre"},"<dependency>\n    <groupId>net.serenity-bdd</groupId>\n    <artifactId>serenity-core</artifactId>\n    <version>${serenity.version}</version>\n    <scope>test</scope>\n</dependency>\n")),(0,d.kt)("p",null,"You will also need a test runner, which will usually be either JUnit 4, JUnit 5 or Cucumber."),(0,d.kt)("h2",{id:"serenity-junit-4-dependencies"},"Serenity JUnit 4 Dependencies"),(0,d.kt)("p",null,"To use JUnit 4 you will need the following dependency:"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre"},"<dependency>\n    <groupId>net.serenity-bdd</groupId>\n    <artifactId>serenity-junit</artifactId>\n    <version>${serenity.version}</version>\n    <scope>test</scope>\n</dependency>\n")),(0,d.kt)("h2",{id:"serenity-junit-5-dependencies"},"Serenity JUnit 5 Dependencies"),(0,d.kt)("p",null,"To use JUnit 5 you will need the following dependency:"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre"},"<dependency>\n    <groupId>net.serenity-bdd</groupId>\n    <artifactId>serenity-junit5</artifactId>\n    <version>${serenity.version}</version>\n    <scope>test</scope>\n</dependency>\n")),(0,d.kt)("p",null,"You will also need the JUnit 5 dependencies, e.g."),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre"},"<dependency>\n    <groupId>org.junit.jupiter</groupId>\n    <artifactId>junit-jupiter-api</artifactId>\n    <version>${junit5.version}</version>\n    <scope>test</scope>\n</dependency>\n<dependency>\n    <groupId>org.junit.jupiter</groupId>\n    <artifactId>junit-jupiter-engine</artifactId>\n    <version>${junit5.version}</version>\n    <scope>test</scope>\n</dependency>\n")),(0,d.kt)("h2",{id:"serenity-cucumber-dependencies"},"Serenity Cucumber Dependencies"),(0,d.kt)("p",null,"For Cucumber you will need the following dependency:"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre"},"<dependency>\n    <groupId>net.serenity-bdd</groupId>\n    <artifactId>serenity-cucumber</artifactId>\n    <version>${serenity.version}</version>\n    <scope>test</scope>\n</dependency>\n")),(0,d.kt)("p",null,"Since Serenity relies on a specific version of the Cucumber APIs, we recommend using the same version of the Cucumber libraries."),(0,d.kt)("p",null,"Cucumber requires a test runner, either JUnit 4 or JUnit 5."),(0,d.kt)("h2",{id:"cucumber-with-junit-4-dependencies"},"Cucumber with JUnit 4 Dependencies"),(0,d.kt)("p",null,"To use JUnit 4 you will need the following dependency:"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre"},"<dependency>\n    <groupId>io.cucumber</groupId>\n    <artifactId>cucumber-junit</artifactId>\n    <version>${cucumber.version}</version>\n    <scope>test</scope>\n</dependency>\n<dependency>\n    <groupId>org.junit.platform</groupId>\n    <artifactId>junit-vintage-engine</artifactId>\n    <version>${junit5.version}</version>\n    <scope>test</scope>\n</dependency>\n")),(0,d.kt)("h2",{id:"cucumber-with-junit-5-dependencies"},"Cucumber with JUnit 5 Dependencies"),(0,d.kt)("p",null,"To use JUnit 5 you will need the following dependency:"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre"},"<dependency>\n    <groupId>io.cucumber</groupId>\n    <artifactId>cucumber-junit-platform-engine</artifactId>\n    <version>${cucumber.version}</version>\n    <scope>test</scope>\n</dependency>\n<dependency>\n    <groupId>org.junit.platform</groupId>\n    <artifactId>junit-platform-suite</artifactId>\n    <version>${junit-platform.version}</version>\n    <scope>test</scope>\n</dependency>\n")),(0,d.kt)("p",null,"See cucumber-junit-platform-engine documentation on using junit-platform-suite to pilot cucumber: ",(0,d.kt)("a",{parentName:"p",href:"https://github.com/cucumber/cucumber-jvm/tree/main/junit-platform-engine#suites-with-different-configurations"},"https://github.com/cucumber/cucumber-jvm/tree/main/junit-platform-engine#suites-with-different-configurations"),", and ",(0,d.kt)("a",{parentName:"p",href:"https://github.com/serenity-bdd/serenity-cucumber-starter"},"https://github.com/serenity-bdd/serenity-cucumber-starter")," for a running example."),(0,d.kt)("h2",{id:"screenplay"},"Screenplay"),(0,d.kt)("p",null,"If you are using the Screenplay pattern, you will also need the Screenplay dependencies:"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre"},"<dependency>\n    <groupId>net.serenity-bdd</groupId>\n    <artifactId>serenity-screenplay</artifactId>\n    <version>${serenity.version}</version>\n    <scope>test</scope>\n</dependency>\n<dependency>\n    <groupId>net.serenity-bdd</groupId>\n    <artifactId>serenity-rest-assured</artifactId>\n    <version>${serenity.version}</version>\n</dependency>\n<dependency>\n    <groupId>net.serenity-bdd</groupId>\n    <artifactId>serenity-ensure</artifactId>\n    <version>${serenity.version}</version>\n    <scope>test</scope>\n</dependency>\n<dependency>\n    <groupId>net.serenity-bdd</groupId>\n    <artifactId>serenity-screenplay-webdriver</artifactId>\n    <version>${serenity.version}</version>\n    <scope>test</scope>\n</dependency>\n")),(0,d.kt)("h2",{id:"the-serenity-maven-plugin"},"The Serenity Maven Plugin"),(0,d.kt)("p",null,"If you want to generate the Serenity reports whenever you run ",(0,d.kt)("inlineCode",{parentName:"p"},"mvn verify"),", you can use the ",(0,d.kt)("inlineCode",{parentName:"p"},"serenity-maven-plugin")," to do that:"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre"},"<plugin>\n    <groupId>net.serenity-bdd.maven.plugins</groupId>\n    <artifactId>serenity-maven-plugin</artifactId>\n    <version>${serenity.version}</version>\n    <configuration>\n      <tags>${tags}</tags>\n    </configuration>\n    <executions>\n        <execution>\n            <id>serenity-reports</id>\n            <phase>post-integration-test</phase>\n            <goals>\n                <goal>aggregate</goal>\n            </goals>\n        </execution>\n    </executions>\n</plugin>\n")))}l.isMDXComponent=!0}}]);